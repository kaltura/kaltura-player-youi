#if TARGET_OS_SIMULATOR // merged by cocoapods-binary

// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef PLAYKITPROVIDERS_SWIFT_H
#define PLAYKITPROVIDERS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import KalturaNetKit;
@import ObjectiveC;
@import PlayKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PlayKitProviders",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AssetReferenceType, closed) {
  AssetReferenceTypeMedia = 0,
  AssetReferenceTypeEpgInternal = 1,
  AssetReferenceTypeEpgExternal = 2,
  AssetReferenceTypeNpvr = 3,
  AssetReferenceTypeUnset = 4,
};

typedef SWIFT_ENUM(NSInteger, AssetType, closed) {
  AssetTypeEpg = 0,
  AssetTypeRecording = 1,
  AssetTypeMedia = 2,
  AssetTypeUnset = 3,
};

@protocol Player;
@class MessageBus;
@class MediaConfig;
@class PlayerEvent;

/// class <code>BaseOTTAnalyticsPlugin</code> is a base plugin object used for OTT analytics plugin subclasses
SWIFT_CLASS("_TtC16PlayKitProviders22BaseOTTAnalyticsPlugin")
@interface BaseOTTAnalyticsPlugin : BasePlugin
/// indicates whether we played for the first time or not.
@property (nonatomic) BOOL isFirstPlay;
/// <hr/>
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateMediaWithMediaConfig:(MediaConfig * _Nonnull)mediaConfig;
- (void)destroy;
@property (nonatomic, readonly, copy) NSArray<SWIFT_METATYPE(PlayerEvent)> * _Nonnull playerEventsToRegister;
- (void)registerEvents;
- (void)unregisterEvents;
@end




SWIFT_CLASS("_TtC16PlayKitProviders24OTTAnalyticsPluginConfig")
@interface OTTAnalyticsPluginConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SessionProvider;
@class NSNumber;
@class PKMediaEntry;

SWIFT_CLASS("_TtC16PlayKitProviders16OVPMediaProvider")
@interface OVPMediaProvider : NSObject <MediaEntryProvider>
@property (nonatomic, strong) id <SessionProvider> _Nullable sessionProvider;
@property (nonatomic, copy) NSString * _Nullable entryId;
@property (nonatomic, strong) NSNumber * _Nullable uiconfId;
@property (nonatomic, copy) NSString * _Nullable referrer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(id <SessionProvider> _Nonnull)sessionProvider OBJC_DESIGNATED_INITIALIZER;
- (void)loadMediaWithCallback:(void (^ _Nonnull)(PKMediaEntry * _Nullable, NSError * _Nullable))callback;
- (void)cancel;
- (enum Scheme)convertSchemeWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@end


/// OTT Event
SWIFT_CLASS("_TtC16PlayKitProviders8OttEvent")
@interface OttEvent : PKEvent
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(OttEvent) _Nonnull report;)
+ (SWIFT_METATYPE(OttEvent) _Nonnull)report SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(OttEvent) _Nonnull bookmarkError;)
+ (SWIFT_METATYPE(OttEvent) _Nonnull)bookmarkError SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


@interface PKEvent (SWIFT_EXTENSION(PlayKitProviders))
/// bufferTime Value, PKEvent Data Accessor
@property (nonatomic, readonly, copy) NSString * _Nullable ottEventMessage;
@end


SWIFT_CLASS("_TtC16PlayKitProviders22PhoenixAnalyticsPlugin")
@interface PhoenixAnalyticsPlugin : BaseOTTAnalyticsPlugin
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pluginName;)
+ (NSString * _Nonnull)pluginName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateConfigWithPluginConfig:(id _Nonnull)pluginConfig;
@end


SWIFT_CLASS("_TtC16PlayKitProviders28PhoenixAnalyticsPluginConfig")
@interface PhoenixAnalyticsPluginConfig : OTTAnalyticsPluginConfig
- (nonnull instancetype)initWithBaseUrl:(NSString * _Nonnull)baseUrl timerInterval:(NSTimeInterval)timerInterval ks:(NSString * _Nonnull)ks partnerId:(NSInteger)partnerId OBJC_DESIGNATED_INITIALIZER;
@end

enum PlaybackContextType : NSInteger;

SWIFT_CLASS("_TtC16PlayKitProviders20PhoenixMediaProvider")
@interface PhoenixMediaProvider : NSObject <MediaEntryProvider>
@property (nonatomic, strong) id <SessionProvider> _Nullable sessionProvider;
@property (nonatomic, copy) NSString * _Nullable assetId;
@property (nonatomic) enum AssetType type;
@property (nonatomic) enum AssetReferenceType refType;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable formats;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable fileIds;
@property (nonatomic) enum PlaybackContextType playbackContextType;
@property (nonatomic, copy) NSString * _Nullable networkProtocol;
@property (nonatomic, copy) NSString * _Nullable referrer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)loadMediaWithCallback:(void (^ _Nonnull)(PKMediaEntry * _Nullable, NSError * _Nullable))callback;
- (void)cancel;
@end

typedef SWIFT_ENUM(NSInteger, PlaybackContextType, closed) {
  PlaybackContextTypeTrailer = 0,
  PlaybackContextTypeCatchup = 1,
  PlaybackContextTypeStartOver = 2,
  PlaybackContextTypePlayback = 3,
  PlaybackContextTypeUnset = 4,
};


/// A SessionProvider that just reflects its input parameters – baseUrl, partnerId, ks.
/// This class does not attempt to manage (create, renew, validate, clear) a session.
/// The application is expected to provide a valid KS, which it can update as required via the <code>ks</code> property. For some
/// use cases, the KS can be null (anonymous media playback, if allowed by access-control).
SWIFT_CLASS("_TtC16PlayKitProviders21SimpleSessionProvider")
@interface SimpleSessionProvider : NSObject <SessionProvider>
@property (nonatomic, readonly, copy) NSString * _Nonnull serverURL;
@property (nonatomic, readonly) int64_t partnerId;
/// Build a SessionProvider with the specified parameters.
/// \param serverURL Kaltura Server URL, such as <code>"https://cdnapisec.kaltura.com"</code>.
///
/// \param partnerId Kaltura partner id.
///
/// \param ks Kaltura Session token.
///
- (nonnull instancetype)initWithServerURL:(NSString * _Nonnull)serverURL partnerId:(int64_t)partnerId ks:(NSString * _Nullable)ks OBJC_DESIGNATED_INITIALIZER;
- (void)loadKSWithCompletion:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16PlayKitProviders24SimpleOVPSessionProvider") SWIFT_DEPRECATED_MSG("", "_TtC16PlayKitProviders21SimpleSessionProvider")
@interface SimpleOVPSessionProvider : SimpleSessionProvider
- (nonnull instancetype)initWithServerURL:(NSString * _Nonnull)serverURL partnerId:(int64_t)partnerId ks:(NSString * _Nullable)ks OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16PlayKitProviders21TVPAPIAnalyticsPlugin")
@interface TVPAPIAnalyticsPlugin : BaseOTTAnalyticsPlugin
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pluginName;)
+ (NSString * _Nonnull)pluginName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateConfigWithPluginConfig:(id _Nonnull)pluginConfig;
@end


SWIFT_CLASS("_TtC16PlayKitProviders27TVPAPIAnalyticsPluginConfig")
@interface TVPAPIAnalyticsPluginConfig : OTTAnalyticsPluginConfig
- (nonnull instancetype)initWithBaseUrl:(NSString * _Nonnull)baseUrl timerInterval:(NSTimeInterval)timerInterval initObject:(NSDictionary<NSString *, id> * _Nonnull)initObject OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif


#else // merged by cocoapods-binary

// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef PLAYKITPROVIDERS_SWIFT_H
#define PLAYKITPROVIDERS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import KalturaNetKit;
@import ObjectiveC;
@import PlayKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PlayKitProviders",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AssetReferenceType, closed) {
  AssetReferenceTypeMedia = 0,
  AssetReferenceTypeEpgInternal = 1,
  AssetReferenceTypeEpgExternal = 2,
  AssetReferenceTypeNpvr = 3,
  AssetReferenceTypeUnset = 4,
};

typedef SWIFT_ENUM(NSInteger, AssetType, closed) {
  AssetTypeEpg = 0,
  AssetTypeRecording = 1,
  AssetTypeMedia = 2,
  AssetTypeUnset = 3,
};

@protocol Player;
@class MessageBus;
@class MediaConfig;
@class PlayerEvent;

/// class <code>BaseOTTAnalyticsPlugin</code> is a base plugin object used for OTT analytics plugin subclasses
SWIFT_CLASS("_TtC16PlayKitProviders22BaseOTTAnalyticsPlugin")
@interface BaseOTTAnalyticsPlugin : BasePlugin
/// indicates whether we played for the first time or not.
@property (nonatomic) BOOL isFirstPlay;
/// <hr/>
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateMediaWithMediaConfig:(MediaConfig * _Nonnull)mediaConfig;
- (void)destroy;
@property (nonatomic, readonly, copy) NSArray<SWIFT_METATYPE(PlayerEvent)> * _Nonnull playerEventsToRegister;
- (void)registerEvents;
- (void)unregisterEvents;
@end




SWIFT_CLASS("_TtC16PlayKitProviders24OTTAnalyticsPluginConfig")
@interface OTTAnalyticsPluginConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol SessionProvider;
@class NSNumber;
@class PKMediaEntry;

SWIFT_CLASS("_TtC16PlayKitProviders16OVPMediaProvider")
@interface OVPMediaProvider : NSObject <MediaEntryProvider>
@property (nonatomic, strong) id <SessionProvider> _Nullable sessionProvider;
@property (nonatomic, copy) NSString * _Nullable entryId;
@property (nonatomic, strong) NSNumber * _Nullable uiconfId;
@property (nonatomic, copy) NSString * _Nullable referrer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(id <SessionProvider> _Nonnull)sessionProvider OBJC_DESIGNATED_INITIALIZER;
- (void)loadMediaWithCallback:(void (^ _Nonnull)(PKMediaEntry * _Nullable, NSError * _Nullable))callback;
- (void)cancel;
- (enum Scheme)convertSchemeWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@end


/// OTT Event
SWIFT_CLASS("_TtC16PlayKitProviders8OttEvent")
@interface OttEvent : PKEvent
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(OttEvent) _Nonnull report;)
+ (SWIFT_METATYPE(OttEvent) _Nonnull)report SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(OttEvent) _Nonnull bookmarkError;)
+ (SWIFT_METATYPE(OttEvent) _Nonnull)bookmarkError SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nullable)data OBJC_DESIGNATED_INITIALIZER;
@end


@interface PKEvent (SWIFT_EXTENSION(PlayKitProviders))
/// bufferTime Value, PKEvent Data Accessor
@property (nonatomic, readonly, copy) NSString * _Nullable ottEventMessage;
@end


SWIFT_CLASS("_TtC16PlayKitProviders22PhoenixAnalyticsPlugin")
@interface PhoenixAnalyticsPlugin : BaseOTTAnalyticsPlugin
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pluginName;)
+ (NSString * _Nonnull)pluginName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateConfigWithPluginConfig:(id _Nonnull)pluginConfig;
@end


SWIFT_CLASS("_TtC16PlayKitProviders28PhoenixAnalyticsPluginConfig")
@interface PhoenixAnalyticsPluginConfig : OTTAnalyticsPluginConfig
- (nonnull instancetype)initWithBaseUrl:(NSString * _Nonnull)baseUrl timerInterval:(NSTimeInterval)timerInterval ks:(NSString * _Nonnull)ks partnerId:(NSInteger)partnerId OBJC_DESIGNATED_INITIALIZER;
@end

enum PlaybackContextType : NSInteger;

SWIFT_CLASS("_TtC16PlayKitProviders20PhoenixMediaProvider")
@interface PhoenixMediaProvider : NSObject <MediaEntryProvider>
@property (nonatomic, strong) id <SessionProvider> _Nullable sessionProvider;
@property (nonatomic, copy) NSString * _Nullable assetId;
@property (nonatomic) enum AssetType type;
@property (nonatomic) enum AssetReferenceType refType;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable formats;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable fileIds;
@property (nonatomic) enum PlaybackContextType playbackContextType;
@property (nonatomic, copy) NSString * _Nullable networkProtocol;
@property (nonatomic, copy) NSString * _Nullable referrer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)loadMediaWithCallback:(void (^ _Nonnull)(PKMediaEntry * _Nullable, NSError * _Nullable))callback;
- (void)cancel;
@end

typedef SWIFT_ENUM(NSInteger, PlaybackContextType, closed) {
  PlaybackContextTypeTrailer = 0,
  PlaybackContextTypeCatchup = 1,
  PlaybackContextTypeStartOver = 2,
  PlaybackContextTypePlayback = 3,
  PlaybackContextTypeUnset = 4,
};


/// A SessionProvider that just reflects its input parameters – baseUrl, partnerId, ks.
/// This class does not attempt to manage (create, renew, validate, clear) a session.
/// The application is expected to provide a valid KS, which it can update as required via the <code>ks</code> property. For some
/// use cases, the KS can be null (anonymous media playback, if allowed by access-control).
SWIFT_CLASS("_TtC16PlayKitProviders21SimpleSessionProvider")
@interface SimpleSessionProvider : NSObject <SessionProvider>
@property (nonatomic, readonly, copy) NSString * _Nonnull serverURL;
@property (nonatomic, readonly) int64_t partnerId;
/// Build a SessionProvider with the specified parameters.
/// \param serverURL Kaltura Server URL, such as <code>"https://cdnapisec.kaltura.com"</code>.
///
/// \param partnerId Kaltura partner id.
///
/// \param ks Kaltura Session token.
///
- (nonnull instancetype)initWithServerURL:(NSString * _Nonnull)serverURL partnerId:(int64_t)partnerId ks:(NSString * _Nullable)ks OBJC_DESIGNATED_INITIALIZER;
- (void)loadKSWithCompletion:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16PlayKitProviders24SimpleOVPSessionProvider") SWIFT_DEPRECATED_MSG("", "_TtC16PlayKitProviders21SimpleSessionProvider")
@interface SimpleOVPSessionProvider : SimpleSessionProvider
- (nonnull instancetype)initWithServerURL:(NSString * _Nonnull)serverURL partnerId:(int64_t)partnerId ks:(NSString * _Nullable)ks OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16PlayKitProviders21TVPAPIAnalyticsPlugin")
@interface TVPAPIAnalyticsPlugin : BaseOTTAnalyticsPlugin
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull pluginName;)
+ (NSString * _Nonnull)pluginName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithPlayer:(id <Player> _Nonnull)player pluginConfig:(id _Nullable)pluginConfig messageBus:(MessageBus * _Nonnull)messageBus error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)onUpdateConfigWithPluginConfig:(id _Nonnull)pluginConfig;
@end


SWIFT_CLASS("_TtC16PlayKitProviders27TVPAPIAnalyticsPluginConfig")
@interface TVPAPIAnalyticsPluginConfig : OTTAnalyticsPluginConfig
- (nonnull instancetype)initWithBaseUrl:(NSString * _Nonnull)baseUrl timerInterval:(NSTimeInterval)timerInterval initObject:(NSDictionary<NSString *, id> * _Nonnull)initObject OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif


#endif // merged by cocoapods-binary